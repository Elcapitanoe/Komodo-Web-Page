(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))u(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&u(i)}).observe(document,{childList:!0,subtree:!0});function p(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function u(e){if(e.ep)return;e.ep=!0;const o=p(e);fetch(e.href,o)}})();(function(){const f="Elcapitanoe",l="Komodo-Build-Prop";function p(){return(window.GH_TOKEN||"").trim()}async function u(t,{method:s="GET"}={}){const r={Accept:"application/vnd.github+json"},n=p();return n&&(r.Authorization=`Bearer ${n}`),fetch(`https://api.github.com${t}`,{method:s,headers:r})}function e(t){return String(t??"").replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;").replaceAll("'","&#39;")}function o(t){try{return new Date(t).toLocaleDateString("en-GB",{year:"numeric",month:"short",day:"2-digit"})}catch{return t||""}}function i(t){return String(t).padStart(2,"0")}function y(t){const s=new Date(t);if(isNaN(s))return"";const r=i(s.getFullYear()%100),n=i(s.getMonth()+1),a=i(s.getDate());return`v${r}${n}${a}`}function m(t){return!t||!t.length?'<p class="muted">No assets</p>':"<ul>"+t.map(s=>`<li><a href="${e(s.browser_download_url)}" target="_blank" rel="noopener noreferrer">${e(s.name)}</a> <span class="meta">(${s.download_count??0}x)</span></li>`).join("")+"</ul>"}async function $(t,s){let r=1,n=[];for(;;){const a=await u(`/repos/${t}/${s}/releases?per_page=100&page=${r}`);if(!a.ok)throw new Error(`GitHub /releases ${a.status}`);const d=await a.json();if(n=n.concat(d),!(a.headers.get("Link")||"").includes('rel="next"')||(r++,r>10))break}return n.filter(a=>!a.draft)}async function w(){const t=document.getElementById("latestBlock"),s=document.getElementById("previousBlock");try{const r=await u(`/repos/${f}/${l}/releases/latest`);if(!r.ok){const c=await r.text();throw new Error(`GitHub /releases/latest ${r.status}: ${c}`)}const n=await r.json(),a=await $(f,l),d=n.published_at||n.created_at,h=y(d)||e(n.tag_name||n.name||"Untitled");t.innerHTML=`
        <p class="meta"><strong>${e(h)}</strong> Â· published ${e(o(d))}</p>
        ${m(n.assets||[])}
      `;const b=a.filter(c=>c.id!==n.id),g=[];for(const c of b)if(!(!c||!c.assets))for(const E of c.assets)g.push(E);s.innerHTML=g.length?m(g):'<p class="muted">No previous builds</p>'}catch(r){const n=r&&r.message?r.message:String(r);t.innerHTML=`<div class="err"><strong>Error:</strong> ${e(n)}</div>`,s.innerHTML=""}}w()})();
